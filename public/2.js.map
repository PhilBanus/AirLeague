{"version":3,"sources":["webpack:///./node_modules/alpinejs/dist/alpine.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","arrayUnique","array","Array","from","Set","isTesting","navigator","userAgent","includes","checkedAttrLooseCompare","valueA","valueB","warnIfMalformedTemplate","el","directive","tagName","toLowerCase","console","warn","content","childElementCount","camelCase","subject","replace","match","char","toUpperCase","debounce","func","wait","timeout","context","this","args","later","clearTimeout","setTimeout","saferEval","expression","dataContext","additionalHelperVariables","call","Function","values","xAttrRE","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","component","type","directives","attributes","map","parseHtmlAttribute","spreadDirective","spreadObject","$data","concat","entries","directiveOrder","sort","a","b","typeA","indexOf","typeB","sortDirectives","normalizedName","typeMatch","valueMatch","modifiers","startsWith","convertClassStringToArray","classList","filterFn","Boolean","split","transitionIn","show","reject","forceSkip","__x_transition","attrs","showAttr","settingBothSidesOfTransition","index","showCallback","styleValues","duration","modifierValue","origin","first","opacity","scale","second","transitionHelper","transitionHelperIn","some","enter","ensureStringExpression","find","enterStart","enterEnd","transitionClasses","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","leave","leaveStart","leaveEnd","transitionClassesOut","fallback","rawValue","isNumeric","join","hook1","hook2","cancel","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","transitionProperty","trim","transitionDuration","transitionTimingFunction","transition","evaluateReturnExpression","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","add","remove","finish","once","isConnected","cleanup","nextFrame","start","during","requestAnimationFrame","Number","getComputedStyle","animationDuration","end","isArray","isNaN","callback","called","handleForDirective","templateEl","initialUpdate","extraVars","iteratorNames","parseForExpression","items","ifAttribute","evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement","currentEl","item","iterationScopeVariables","scopeVariables","collection","getIterationScopeVariables","currentKey","bindKeyAttribute","generateKeyForIteration","nextEl","__x_for_key","tmpNextEl","parentElement","insertBefore","nextElementSibling","undefined","lookAheadForMatchingKeyedElementAndMoveItIfFound","__x_for","updateElements","clone","document","importNode","addElementInLoopAfterCurrentEl","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","removeAnyLeftOverElementsFromPreviousUpdate","forIteratorRE","inMatch","res","iteratorMatch","handleAttributeBindingDirective","attrName","attrType","Alpine","ignoreFocusedForValueBinding","activeElement","isSameNode","checked","val","String","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","removeAttribute","isBooleanAttr","setIfChanged","getAttribute","registerListener","event","passive","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","body","isKeyEvent","keyModifiers","debounceIndex","splice","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","then","nextModifier","evaluateCommandExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","newValue","safeParseNumber","multiple","selectedOptions","number","parseFloat","getPrototypeOf","create","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyNames","preventExtensions","hasOwnProperty","ArrayPush","ArrayConcat","ArrayMap","prototype","isUndefined","isFunction","proxyToValueMap","WeakMap","registerProxy","proxy","set","unwrap","replicaOrAny","get","wrapValue","membrane","valueIsObservable","getProxy","lockShadowTarget","shadowTarget","originalTarget","descriptor","wrapDescriptor","ReactiveProxyHandler","valueObserved","valueMutated","thisArg","argArray","newTarget","shadowIsExtensible","targetIsExtensible","desc","shadowDescriptor","originalDescriptor","unwrapDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","ReactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","o","getReactiveState","readOnly","reactive","p","distortedValue","reactiveState","reactiveHandler","Proxy","readOnlyHandler","Component","componentForClone","$el","dataAttr","dataExpression","initExpression","dataExtras","canonicalComponentElementReference","magicProperties","unobservedData","getUnobservedData","data","wrapDataInObservable","initReturnedCallback","$refs","getRefsProxy","nextTickStack","$nextTick","watchers","$watch","property","showDirectiveStack","showDirectiveLastElement","onBeforeComponentInitializeds","pauseReactivity","listenForNewElementsToInitialize","onComponentInitializeds","observable","unwrappedData","copy","unwrap$1","self","updateDom","mutationCallback","wrap","fullDotNotationKey","dotNotationParts","reduce","comparisonData","part","is","initializeComponentCallback","walk","node","firstElementChild","__x","rootEl","walkAndSkipNestedComponents","__x_inserted_me","initializeElement","executeAndClearRemainingShowDirectiveStack","executeAndClearNextTickStack","registerListeners","resolveBoundAttributes","updateElement","shift","reverse","Promise","resolve","promiseChain","promise","finishElement","catch","rightSideOfExpression","registerModelListener","output","textContent","handleTextDirective","innerHTML","handleHtmlDirective","display","__x_is_shown","removeProperty","handle","handleShowDirective","expressionResult","elementHasAlreadyBeenAdded","handleIfDirective","$dispatch","getDispatchFunction","AsyncFunction","async","constructor","methodReference","saferEvalNoReturn","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","ref","version","pauseMutationObserver","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector","error","newEl","addMagicProperty","onComponentInitialized","onBeforeComponentInitialized","deferLoadingAlpine","factory"],"mappings":"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","file":"2.js","sourcesContent":["(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global = global || self, global.Alpine = factory());\r\n}(this, (function () { 'use strict';\r\n\r\n  function _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n      Object.defineProperty(obj, key, {\r\n        value: value,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      });\r\n    } else {\r\n      obj[key] = value;\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n\r\n    if (Object.getOwnPropertySymbols) {\r\n      var symbols = Object.getOwnPropertySymbols(object);\r\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\r\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n      });\r\n      keys.push.apply(keys, symbols);\r\n    }\r\n\r\n    return keys;\r\n  }\r\n\r\n  function _objectSpread2(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i] != null ? arguments[i] : {};\r\n\r\n      if (i % 2) {\r\n        ownKeys(Object(source), true).forEach(function (key) {\r\n          _defineProperty(target, key, source[key]);\r\n        });\r\n      } else if (Object.getOwnPropertyDescriptors) {\r\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\r\n      } else {\r\n        ownKeys(Object(source)).forEach(function (key) {\r\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\r\n        });\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  // Thanks @stimulus:\r\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\r\n  function domReady() {\r\n    return new Promise(resolve => {\r\n      if (document.readyState == \"loading\") {\r\n        document.addEventListener(\"DOMContentLoaded\", resolve);\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n  function arrayUnique(array) {\r\n    return Array.from(new Set(array));\r\n  }\r\n  function isTesting() {\r\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\r\n  }\r\n  function checkedAttrLooseCompare(valueA, valueB) {\r\n    return valueA == valueB;\r\n  }\r\n  function warnIfMalformedTemplate(el, directive) {\r\n    if (el.tagName.toLowerCase() !== 'template') {\r\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\r\n    } else if (el.content.childElementCount !== 1) {\r\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with multiple element roots. Make sure <template> only has a single child element.`);\r\n    }\r\n  }\r\n  function kebabCase(subject) {\r\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\r\n  }\r\n  function camelCase(subject) {\r\n    return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\r\n  }\r\n  function walk(el, callback) {\r\n    if (callback(el) === false) return;\r\n    let node = el.firstElementChild;\r\n\r\n    while (node) {\r\n      walk(node, callback);\r\n      node = node.nextElementSibling;\r\n    }\r\n  }\r\n  function debounce(func, wait) {\r\n    var timeout;\r\n    return function () {\r\n      var context = this,\r\n          args = arguments;\r\n\r\n      var later = function later() {\r\n        timeout = null;\r\n        func.apply(context, args);\r\n      };\r\n\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n  }\r\n  function saferEval(expression, dataContext, additionalHelperVariables = {}) {\r\n    if (typeof expression === 'function') {\r\n      return expression.call(dataContext);\r\n    }\r\n\r\n    return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\r\n  }\r\n  function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\r\n    if (typeof expression === 'function') {\r\n      return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\r\n    }\r\n\r\n    let AsyncFunction = Function;\r\n    /* MODERN-ONLY:START */\r\n\r\n    AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\r\n    /* MODERN-ONLY:END */\r\n    // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\r\n    // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\r\n\r\n    if (Object.keys(dataContext).includes(expression)) {\r\n      let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\r\n\r\n      if (typeof methodReference === 'function') {\r\n        return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\r\n      } else {\r\n        return Promise.resolve();\r\n      }\r\n    }\r\n\r\n    return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\r\n  }\r\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\r\n  function isXAttr(attr) {\r\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\r\n    return xAttrRE.test(name);\r\n  }\r\n  function getXAttrs(el, component, type) {\r\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\r\n\r\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\r\n\r\n    if (spreadDirective) {\r\n      let spreadObject = saferEval(spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\r\n\r\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\r\n        name,\r\n        value\r\n      })));\r\n    }\r\n\r\n    if (type) return directives.filter(i => i.type === type);\r\n    return sortDirectives(directives);\r\n  }\r\n\r\n  function sortDirectives(directives) {\r\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\r\n    return directives.sort((a, b) => {\r\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\r\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\r\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\r\n    });\r\n  }\r\n\r\n  function parseHtmlAttribute({\r\n    name,\r\n    value\r\n  }) {\r\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\r\n    const typeMatch = normalizedName.match(xAttrRE);\r\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\-:]+)/);\r\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\r\n    return {\r\n      type: typeMatch ? typeMatch[1] : null,\r\n      value: valueMatch ? valueMatch[1] : null,\r\n      modifiers: modifiers.map(i => i.replace('.', '')),\r\n      expression: value\r\n    };\r\n  }\r\n  function isBooleanAttr(attrName) {\r\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\r\n    // Array roughly ordered by estimated usage\r\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\r\n    return booleanAttributes.includes(attrName);\r\n  }\r\n  function replaceAtAndColonWithStandardSyntax(name) {\r\n    if (name.startsWith('@')) {\r\n      return name.replace('@', 'x-on:');\r\n    } else if (name.startsWith(':')) {\r\n      return name.replace(':', 'x-bind:');\r\n    }\r\n\r\n    return name;\r\n  }\r\n  function convertClassStringToArray(classList, filterFn = Boolean) {\r\n    return classList.split(' ').filter(filterFn);\r\n  }\r\n  const TRANSITION_TYPE_IN = 'in';\r\n  const TRANSITION_TYPE_OUT = 'out';\r\n  const TRANSITION_CANCELLED = 'cancelled';\r\n  function transitionIn(el, show, reject, component, forceSkip = false) {\r\n    // We don't want to transition on the initial page load.\r\n    if (forceSkip) return show();\r\n\r\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\r\n      // there is already a similar transition going on, this was probably triggered by\r\n      // a change in a different property, let's just leave the previous one doing its job\r\n      return;\r\n    }\r\n\r\n    const attrs = getXAttrs(el, component, 'transition');\r\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\r\n\r\n    if (showAttr && showAttr.modifiers.includes('transition')) {\r\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\r\n\r\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\r\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\r\n\r\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\r\n      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.\r\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\r\n      transitionClassesIn(el, component, attrs, show, reject);\r\n    } else {\r\n      // If neither, just show that damn thing.\r\n      show();\r\n    }\r\n  }\r\n  function transitionOut(el, hide, reject, component, forceSkip = false) {\r\n    // We don't want to transition on the initial page load.\r\n    if (forceSkip) return hide();\r\n\r\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\r\n      // there is already a similar transition going on, this was probably triggered by\r\n      // a change in a different property, let's just leave the previous one doing its job\r\n      return;\r\n    }\r\n\r\n    const attrs = getXAttrs(el, component, 'transition');\r\n    const showAttr = getXAttrs(el, component, 'show')[0];\r\n\r\n    if (showAttr && showAttr.modifiers.includes('transition')) {\r\n      let modifiers = showAttr.modifiers;\r\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\r\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\r\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\r\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);\r\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\r\n      transitionClassesOut(el, component, attrs, hide, reject);\r\n    } else {\r\n      hide();\r\n    }\r\n  }\r\n  function transitionHelperIn(el, modifiers, showCallback, reject) {\r\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\r\n    const styleValues = {\r\n      duration: modifierValue(modifiers, 'duration', 150),\r\n      origin: modifierValue(modifiers, 'origin', 'center'),\r\n      first: {\r\n        opacity: 0,\r\n        scale: modifierValue(modifiers, 'scale', 95)\r\n      },\r\n      second: {\r\n        opacity: 1,\r\n        scale: 100\r\n      }\r\n    };\r\n    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);\r\n  }\r\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {\r\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\r\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\r\n    // use that.\r\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\r\n    const styleValues = {\r\n      duration: duration,\r\n      origin: modifierValue(modifiers, 'origin', 'center'),\r\n      first: {\r\n        opacity: 1,\r\n        scale: 100\r\n      },\r\n      second: {\r\n        opacity: 0,\r\n        scale: modifierValue(modifiers, 'scale', 95)\r\n      }\r\n    };\r\n    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);\r\n  }\r\n\r\n  function modifierValue(modifiers, key, fallback) {\r\n    // If the modifier isn't present, use the default.\r\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\r\n\r\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\r\n    if (!rawValue) return fallback;\r\n\r\n    if (key === 'scale') {\r\n      // Check if the very next value is NOT a number and return the fallback.\r\n      // If x-show.transition.scale, we'll use the default scale value.\r\n      // That is how a user opts out of the opacity transition.\r\n      if (!isNumeric(rawValue)) return fallback;\r\n    }\r\n\r\n    if (key === 'duration') {\r\n      // Support x-show.transition.duration.500ms && duration.500\r\n      let match = rawValue.match(/([0-9]+)ms/);\r\n      if (match) return match[1];\r\n    }\r\n\r\n    if (key === 'origin') {\r\n      // Support chaining origin directions: x-show.transition.top.right\r\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\r\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\r\n      }\r\n    }\r\n\r\n    return rawValue;\r\n  }\r\n\r\n  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {\r\n    // clear the previous transition if exists to avoid caching the wrong styles\r\n    if (el.__x_transition) {\r\n      el.__x_transition.cancel && el.__x_transition.cancel();\r\n    } // If the user set these style values, we'll put them back when we're done with them.\r\n\r\n\r\n    const opacityCache = el.style.opacity;\r\n    const transformCache = el.style.transform;\r\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\r\n\r\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\r\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\r\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\r\n    // This way you can get a birds eye view of the hooks, and the differences\r\n    // between them.\r\n\r\n    const stages = {\r\n      start() {\r\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\r\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\r\n      },\r\n\r\n      during() {\r\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\r\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\r\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\r\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\r\n      },\r\n\r\n      show() {\r\n        hook1();\r\n      },\r\n\r\n      end() {\r\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\r\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\r\n      },\r\n\r\n      hide() {\r\n        hook2();\r\n      },\r\n\r\n      cleanup() {\r\n        if (transitionOpacity) el.style.opacity = opacityCache;\r\n        if (transitionScale) el.style.transform = transformCache;\r\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\r\n        el.style.transitionProperty = null;\r\n        el.style.transitionDuration = null;\r\n        el.style.transitionTimingFunction = null;\r\n      }\r\n\r\n    };\r\n    transition(el, stages, type, reject);\r\n  }\r\n\r\n  const ensureStringExpression = (expression, el, component) => {\r\n    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\r\n  };\r\n\r\n  function transitionClassesIn(el, component, directives, showCallback, reject) {\r\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\r\n      expression: ''\r\n    }).expression, el, component));\r\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\r\n      expression: ''\r\n    }).expression, el, component));\r\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\r\n      expression: ''\r\n    }).expression, el, component));\r\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);\r\n  }\r\n  function transitionClassesOut(el, component, directives, hideCallback, reject) {\r\n    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {\r\n      expression: ''\r\n    }).expression, el, component));\r\n    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {\r\n      expression: ''\r\n    }).expression, el, component));\r\n    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {\r\n      expression: ''\r\n    }).expression, el, component));\r\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);\r\n  }\r\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {\r\n    // clear the previous transition if exists to avoid caching the wrong classes\r\n    if (el.__x_transition) {\r\n      el.__x_transition.cancel && el.__x_transition.cancel();\r\n    }\r\n\r\n    const originalClasses = el.__x_original_classes || [];\r\n    const stages = {\r\n      start() {\r\n        el.classList.add(...classesStart);\r\n      },\r\n\r\n      during() {\r\n        el.classList.add(...classesDuring);\r\n      },\r\n\r\n      show() {\r\n        hook1();\r\n      },\r\n\r\n      end() {\r\n        // Don't remove classes that were in the original class attribute.\r\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\r\n        el.classList.add(...classesEnd);\r\n      },\r\n\r\n      hide() {\r\n        hook2();\r\n      },\r\n\r\n      cleanup() {\r\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\r\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\r\n      }\r\n\r\n    };\r\n    transition(el, stages, type, reject);\r\n  }\r\n  function transition(el, stages, type, reject) {\r\n    const finish = once(() => {\r\n      stages.hide(); // Adding an \"isConnected\" check, in case the callback\r\n      // removed the element from the DOM.\r\n\r\n      if (el.isConnected) {\r\n        stages.cleanup();\r\n      }\r\n\r\n      delete el.__x_transition;\r\n    });\r\n    el.__x_transition = {\r\n      // Set transition type so we can avoid clearing transition if the direction is the same\r\n      type: type,\r\n      // create a callback for the last stages of the transition so we can call it\r\n      // from different point and early terminate it. Once will ensure that function\r\n      // is only called one time.\r\n      cancel: once(() => {\r\n        reject(TRANSITION_CANCELLED);\r\n        finish();\r\n      }),\r\n      finish,\r\n      // This store the next animation frame so we can cancel it\r\n      nextFrame: null\r\n    };\r\n    stages.start();\r\n    stages.during();\r\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\r\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\r\n      // for every single transition property. Let's grab the first one and call it a day.\r\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\r\n\r\n      if (duration === 0) {\r\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\r\n      }\r\n\r\n      stages.show();\r\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\r\n        stages.end();\r\n        setTimeout(el.__x_transition.finish, duration);\r\n      });\r\n    });\r\n  }\r\n  function isNumeric(subject) {\r\n    return !Array.isArray(subject) && !isNaN(subject);\r\n  } // Thanks @vuejs\r\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\r\n\r\n  function once(callback) {\r\n    let called = false;\r\n    return function () {\r\n      if (!called) {\r\n        called = true;\r\n        callback.apply(this, arguments);\r\n      }\r\n    };\r\n  }\r\n\r\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\r\n    warnIfMalformedTemplate(templateEl, 'x-for');\r\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\r\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\r\n\r\n    let currentEl = templateEl;\r\n    items.forEach((item, index) => {\r\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\r\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\r\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\r\n\r\n      if (!nextEl) {\r\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\r\n\r\n        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);\r\n        nextEl.__x_for = iterationScopeVariables;\r\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\r\n      } else {\r\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\r\n        delete nextEl.__x_for_key;\r\n        nextEl.__x_for = iterationScopeVariables;\r\n        component.updateElements(nextEl, () => nextEl.__x_for);\r\n      }\r\n\r\n      currentEl = nextEl;\r\n      currentEl.__x_for_key = currentKey;\r\n    });\r\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\r\n  } // This was taken from VueJS 2.* core. Thanks Vue!\r\n\r\n  function parseForExpression(expression) {\r\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\n    let stripParensRE = /^\\(|\\)$/g;\r\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n    let inMatch = expression.match(forAliasRE);\r\n    if (!inMatch) return;\r\n    let res = {};\r\n    res.items = inMatch[2].trim();\r\n    let item = inMatch[1].trim().replace(stripParensRE, '');\r\n    let iteratorMatch = item.match(forIteratorRE);\r\n\r\n    if (iteratorMatch) {\r\n      res.item = item.replace(forIteratorRE, '').trim();\r\n      res.index = iteratorMatch[1].trim();\r\n\r\n      if (iteratorMatch[2]) {\r\n        res.collection = iteratorMatch[2].trim();\r\n      }\r\n    } else {\r\n      res.item = item;\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\r\n    // We must create a new object, so each iteration has a new scope\r\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\r\n    scopeVariables[iteratorNames.item] = item;\r\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\r\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\r\n    return scopeVariables;\r\n  }\r\n\r\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\r\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\r\n\r\n    if (!bindKeyAttribute) return index;\r\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\r\n  }\r\n\r\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\r\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\r\n\r\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\r\n      return [];\r\n    }\r\n\r\n    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.\r\n\r\n    if (isNumeric(items) && items > 0) {\r\n      items = Array.from(Array(items).keys(), i => i + 1);\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\r\n    let clone = document.importNode(templateEl.content, true);\r\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\r\n    return currentEl.nextElementSibling;\r\n  }\r\n\r\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\r\n    if (!nextEl) return; // If the the key's DO match, no need to look ahead.\r\n\r\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\r\n    // If we find it, we'll move it to the current position in the loop.\r\n\r\n    let tmpNextEl = nextEl;\r\n\r\n    while (tmpNextEl) {\r\n      if (tmpNextEl.__x_for_key === currentKey) {\r\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\r\n      }\r\n\r\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\r\n    }\r\n  }\r\n\r\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\r\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\r\n\r\n    while (nextElementFromOldLoop) {\r\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\r\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\r\n      transitionOut(nextElementFromOldLoop, () => {\r\n        nextElementFromOldLoopImmutable.remove();\r\n      }, () => {}, component);\r\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\r\n    }\r\n  }\r\n\r\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\r\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\r\n\r\n    if (attrName === 'value') {\r\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\r\n\r\n      if (value === undefined && expression.match(/\\./)) {\r\n        value = '';\r\n      }\r\n\r\n      if (el.type === 'radio') {\r\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\r\n        // If there are any initial state values, radio will have a correct\r\n        // \"checked\" value since x-bind:value is processed before x-model.\r\n        if (el.attributes.value === undefined && attrType === 'bind') {\r\n          el.value = value;\r\n        } else if (attrType !== 'bind') {\r\n          el.checked = checkedAttrLooseCompare(el.value, value);\r\n        }\r\n      } else if (el.type === 'checkbox') {\r\n        // If we are explicitly binding a string to the :value, set the string,\r\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\r\n        // automatically.\r\n        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {\r\n          el.value = String(value);\r\n        } else if (attrType !== 'bind') {\r\n          if (Array.isArray(value)) {\r\n            // I'm purposely not using Array.includes here because it's\r\n            // strict, and because of Numeric/String mis-casting, I\r\n            // want the \"includes\" to be \"fuzzy\".\r\n            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\r\n          } else {\r\n            el.checked = !!value;\r\n          }\r\n        }\r\n      } else if (el.tagName === 'SELECT') {\r\n        updateSelect(el, value);\r\n      } else {\r\n        if (el.value === value) return;\r\n        el.value = value;\r\n      }\r\n    } else if (attrName === 'class') {\r\n      if (Array.isArray(value)) {\r\n        const originalClasses = el.__x_original_classes || [];\r\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\r\n      } else if (typeof value === 'object') {\r\n        // Sorting the keys / class names by their boolean value will ensure that\r\n        // anything that evaluates to `false` and needs to remove classes is run first.\r\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\r\n        keysSortedByBooleanValue.forEach(classNames => {\r\n          if (value[classNames]) {\r\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\r\n          } else {\r\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\r\n          }\r\n        });\r\n      } else {\r\n        const originalClasses = el.__x_original_classes || [];\r\n        const newClasses = convertClassStringToArray(value);\r\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\r\n      }\r\n    } else {\r\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\r\n\r\n      if ([null, undefined, false].includes(value)) {\r\n        el.removeAttribute(attrName);\r\n      } else {\r\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setIfChanged(el, attrName, value) {\r\n    if (el.getAttribute(attrName) != value) {\r\n      el.setAttribute(attrName, value);\r\n    }\r\n  }\r\n\r\n  function updateSelect(el, value) {\r\n    const arrayWrappedValue = [].concat(value).map(value => {\r\n      return value + '';\r\n    });\r\n    Array.from(el.options).forEach(option => {\r\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\r\n    });\r\n  }\r\n\r\n  function handleTextDirective(el, output, expression) {\r\n    // If nested model key is undefined, set the default value to empty string.\r\n    if (output === undefined && expression.match(/\\./)) {\r\n      output = '';\r\n    }\r\n\r\n    el.textContent = output;\r\n  }\r\n\r\n  function handleHtmlDirective(component, el, expression, extraVars) {\r\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\r\n  }\r\n\r\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\r\n    const hide = () => {\r\n      el.style.display = 'none';\r\n      el.__x_is_shown = false;\r\n    };\r\n\r\n    const show = () => {\r\n      if (el.style.length === 1 && el.style.display === 'none') {\r\n        el.removeAttribute('style');\r\n      } else {\r\n        el.style.removeProperty('display');\r\n      }\r\n\r\n      el.__x_is_shown = true;\r\n    };\r\n\r\n    if (initialUpdate === true) {\r\n      if (value) {\r\n        show();\r\n      } else {\r\n        hide();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const handle = (resolve, reject) => {\r\n      if (value) {\r\n        if (el.style.display === 'none' || el.__x_transition) {\r\n          transitionIn(el, () => {\r\n            show();\r\n          }, reject, component);\r\n        }\r\n\r\n        resolve(() => {});\r\n      } else {\r\n        if (el.style.display !== 'none') {\r\n          transitionOut(el, () => {\r\n            resolve(() => {\r\n              hide();\r\n            });\r\n          }, reject, component);\r\n        } else {\r\n          resolve(() => {});\r\n        }\r\n      }\r\n    }; // The working of x-show is a bit complex because we need to\r\n    // wait for any child transitions to finish before hiding\r\n    // some element. Also, this has to be done recursively.\r\n    // If x-show.immediate, foregoe the waiting.\r\n\r\n\r\n    if (modifiers.includes('immediate')) {\r\n      handle(finish => finish(), () => {});\r\n      return;\r\n    } // x-show is encountered during a DOM tree walk. If an element\r\n    // we encounter is NOT a child of another x-show element we\r\n    // can execute the previous x-show stack (if one exists).\r\n\r\n\r\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\r\n      component.executeAndClearRemainingShowDirectiveStack();\r\n    }\r\n\r\n    component.showDirectiveStack.push(handle);\r\n    component.showDirectiveLastElement = el;\r\n  }\r\n\r\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\r\n    warnIfMalformedTemplate(el, 'x-if');\r\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\r\n\r\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\r\n      const clone = document.importNode(el.content, true);\r\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\r\n      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);\r\n      component.initializeElements(el.nextElementSibling, extraVars);\r\n      el.nextElementSibling.__x_inserted_me = true;\r\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\r\n      transitionOut(el.nextElementSibling, () => {\r\n        el.nextElementSibling.remove();\r\n      }, () => {}, component, initialUpdate);\r\n    }\r\n  }\r\n\r\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\r\n    const options = {\r\n      passive: modifiers.includes('passive')\r\n    };\r\n\r\n    if (modifiers.includes('camel')) {\r\n      event = camelCase(event);\r\n    }\r\n\r\n    if (modifiers.includes('away')) {\r\n      let handler = e => {\r\n        // Don't do anything if the click came from the element or within it.\r\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\r\n\r\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\r\n        // is from outside it, let's run the expression.\r\n\r\n        runListenerHandler(component, expression, e, extraVars);\r\n\r\n        if (modifiers.includes('once')) {\r\n          document.removeEventListener(event, handler, options);\r\n        }\r\n      }; // Listen for this event at the root level.\r\n\r\n\r\n      document.addEventListener(event, handler, options);\r\n    } else {\r\n      let listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\r\n\r\n      let handler = e => {\r\n        // Remove this global event handler if the element that declared it\r\n        // has been removed. It's now stale.\r\n        if (listenerTarget === window || listenerTarget === document) {\r\n          if (!document.body.contains(el)) {\r\n            listenerTarget.removeEventListener(event, handler, options);\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (isKeyEvent(event)) {\r\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (modifiers.includes('prevent')) e.preventDefault();\r\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\r\n        // the target element matches the element we are registering the\r\n        // event on, run the handler\r\n\r\n        if (!modifiers.includes('self') || e.target === el) {\r\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\r\n          returnValue.then(value => {\r\n            if (value === false) {\r\n              e.preventDefault();\r\n            } else {\r\n              if (modifiers.includes('once')) {\r\n                listenerTarget.removeEventListener(event, handler, options);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      };\r\n\r\n      if (modifiers.includes('debounce')) {\r\n        let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\r\n        let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\r\n        handler = debounce(handler, wait);\r\n      }\r\n\r\n      listenerTarget.addEventListener(event, handler, options);\r\n    }\r\n  }\r\n\r\n  function runListenerHandler(component, expression, e, extraVars) {\r\n    return component.evaluateCommandExpression(e.target, expression, () => {\r\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\r\n        '$event': e\r\n      });\r\n    });\r\n  }\r\n\r\n  function isKeyEvent(event) {\r\n    return ['keydown', 'keyup'].includes(event);\r\n  }\r\n\r\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\r\n    let keyModifiers = modifiers.filter(i => {\r\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\r\n    });\r\n\r\n    if (keyModifiers.includes('debounce')) {\r\n      let debounceIndex = keyModifiers.indexOf('debounce');\r\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\r\n    } // If no modifier is specified, we'll call it a press.\r\n\r\n\r\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\r\n\r\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\r\n\r\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\r\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\r\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\r\n\r\n    if (selectedSystemKeyModifiers.length > 0) {\r\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\r\n        // Alias \"cmd\" and \"super\" to \"meta\"\r\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\r\n        return e[`${modifier}Key`];\r\n      }); // If all the modifiers selected are pressed, ...\r\n\r\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\r\n        // AND the remaining key is pressed as well. It's a press.\r\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\r\n      }\r\n    } // We'll call it NOT a valid keypress.\r\n\r\n\r\n    return true;\r\n  }\r\n\r\n  function keyToModifier(key) {\r\n    switch (key) {\r\n      case '/':\r\n        return 'slash';\r\n\r\n      case ' ':\r\n      case 'Spacebar':\r\n        return 'space';\r\n\r\n      default:\r\n        return key && kebabCase(key);\r\n    }\r\n  }\r\n\r\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\r\n    // If the element we are binding to is a select, a radio, or checkbox\r\n    // we'll listen for the change event instead of the \"input\" event.\r\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\r\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\r\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\r\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\r\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\r\n      });\r\n    });\r\n  }\r\n\r\n  function generateModelAssignmentFunction(el, modifiers, expression) {\r\n    if (el.type === 'radio') {\r\n      // Radio buttons only work properly when they share a name attribute.\r\n      // People might assume we take care of that for them, because\r\n      // they already set a shared \"x-model\" attribute.\r\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\r\n    }\r\n\r\n    return (event, currentValue) => {\r\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\r\n      if (event instanceof CustomEvent && event.detail) {\r\n        return event.detail;\r\n      } else if (el.type === 'checkbox') {\r\n        // If the data we are binding to is an array, toggle its value inside the array.\r\n        if (Array.isArray(currentValue)) {\r\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\r\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));\r\n        } else {\r\n          return event.target.checked;\r\n        }\r\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\r\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\r\n          const rawValue = option.value || option.text;\r\n          return safeParseNumber(rawValue);\r\n        }) : Array.from(event.target.selectedOptions).map(option => {\r\n          return option.value || option.text;\r\n        });\r\n      } else {\r\n        const rawValue = event.target.value;\r\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\r\n      }\r\n    };\r\n  }\r\n\r\n  function safeParseNumber(rawValue) {\r\n    const number = rawValue ? parseFloat(rawValue) : null;\r\n    return isNumeric(number) ? number : rawValue;\r\n  }\r\n\r\n  /**\r\n   * Copyright (C) 2017 salesforce.com, inc.\r\n   */\r\n  const { isArray } = Array;\r\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\r\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\r\n  function isUndefined(obj) {\r\n      return obj === undefined;\r\n  }\r\n  function isFunction(obj) {\r\n      return typeof obj === 'function';\r\n  }\r\n  function isObject(obj) {\r\n      return typeof obj === 'object';\r\n  }\r\n  const proxyToValueMap = new WeakMap();\r\n  function registerProxy(proxy, value) {\r\n      proxyToValueMap.set(proxy, value);\r\n  }\r\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\r\n\r\n  function wrapValue(membrane, value) {\r\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\r\n  }\r\n  /**\r\n   * Unwrap property descriptors will set value on original descriptor\r\n   * We only need to unwrap if value is specified\r\n   * @param descriptor external descrpitor provided to define new property on original value\r\n   */\r\n  function unwrapDescriptor(descriptor) {\r\n      if (hasOwnProperty.call(descriptor, 'value')) {\r\n          descriptor.value = unwrap(descriptor.value);\r\n      }\r\n      return descriptor;\r\n  }\r\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\r\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\r\n      targetKeys.forEach((key) => {\r\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\r\n          // We do not need to wrap the descriptor if configurable\r\n          // Because we can deal with wrapping it when user goes through\r\n          // Get own property descriptor. There is also a chance that this descriptor\r\n          // could change sometime in the future, so we can defer wrapping\r\n          // until we need to\r\n          if (!descriptor.configurable) {\r\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\r\n          }\r\n          ObjectDefineProperty(shadowTarget, key, descriptor);\r\n      });\r\n      preventExtensions(shadowTarget);\r\n  }\r\n  class ReactiveProxyHandler {\r\n      constructor(membrane, value) {\r\n          this.originalTarget = value;\r\n          this.membrane = membrane;\r\n      }\r\n      get(shadowTarget, key) {\r\n          const { originalTarget, membrane } = this;\r\n          const value = originalTarget[key];\r\n          const { valueObserved } = membrane;\r\n          valueObserved(originalTarget, key);\r\n          return membrane.getProxy(value);\r\n      }\r\n      set(shadowTarget, key, value) {\r\n          const { originalTarget, membrane: { valueMutated } } = this;\r\n          const oldValue = originalTarget[key];\r\n          if (oldValue !== value) {\r\n              originalTarget[key] = value;\r\n              valueMutated(originalTarget, key);\r\n          }\r\n          else if (key === 'length' && isArray(originalTarget)) {\r\n              // fix for issue #236: push will add the new index, and by the time length\r\n              // is updated, the internal length is already equal to the new length value\r\n              // therefore, the oldValue is equal to the value. This is the forking logic\r\n              // to support this use case.\r\n              valueMutated(originalTarget, key);\r\n          }\r\n          return true;\r\n      }\r\n      deleteProperty(shadowTarget, key) {\r\n          const { originalTarget, membrane: { valueMutated } } = this;\r\n          delete originalTarget[key];\r\n          valueMutated(originalTarget, key);\r\n          return true;\r\n      }\r\n      apply(shadowTarget, thisArg, argArray) {\r\n          /* No op */\r\n      }\r\n      construct(target, argArray, newTarget) {\r\n          /* No op */\r\n      }\r\n      has(shadowTarget, key) {\r\n          const { originalTarget, membrane: { valueObserved } } = this;\r\n          valueObserved(originalTarget, key);\r\n          return key in originalTarget;\r\n      }\r\n      ownKeys(shadowTarget) {\r\n          const { originalTarget } = this;\r\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\r\n      }\r\n      isExtensible(shadowTarget) {\r\n          const shadowIsExtensible = isExtensible(shadowTarget);\r\n          if (!shadowIsExtensible) {\r\n              return shadowIsExtensible;\r\n          }\r\n          const { originalTarget, membrane } = this;\r\n          const targetIsExtensible = isExtensible(originalTarget);\r\n          if (!targetIsExtensible) {\r\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\r\n          }\r\n          return targetIsExtensible;\r\n      }\r\n      setPrototypeOf(shadowTarget, prototype) {\r\n      }\r\n      getPrototypeOf(shadowTarget) {\r\n          const { originalTarget } = this;\r\n          return getPrototypeOf(originalTarget);\r\n      }\r\n      getOwnPropertyDescriptor(shadowTarget, key) {\r\n          const { originalTarget, membrane } = this;\r\n          const { valueObserved } = this.membrane;\r\n          // keys looked up via hasOwnProperty need to be reactive\r\n          valueObserved(originalTarget, key);\r\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\r\n          if (isUndefined(desc)) {\r\n              return desc;\r\n          }\r\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\r\n          if (!isUndefined(shadowDescriptor)) {\r\n              return shadowDescriptor;\r\n          }\r\n          // Note: by accessing the descriptor, the key is marked as observed\r\n          // but access to the value, setter or getter (if available) cannot observe\r\n          // mutations, just like regular methods, in which case we just do nothing.\r\n          desc = wrapDescriptor(membrane, desc, wrapValue);\r\n          if (!desc.configurable) {\r\n              // If descriptor from original target is not configurable,\r\n              // We must copy the wrapped descriptor over to the shadow target.\r\n              // Otherwise, proxy will throw an invariant error.\r\n              // This is our last chance to lock the value.\r\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\r\n              ObjectDefineProperty(shadowTarget, key, desc);\r\n          }\r\n          return desc;\r\n      }\r\n      preventExtensions(shadowTarget) {\r\n          const { originalTarget, membrane } = this;\r\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\r\n          preventExtensions(originalTarget);\r\n          return true;\r\n      }\r\n      defineProperty(shadowTarget, key, descriptor) {\r\n          const { originalTarget, membrane } = this;\r\n          const { valueMutated } = membrane;\r\n          const { configurable } = descriptor;\r\n          // We have to check for value in descriptor\r\n          // because Object.freeze(proxy) calls this method\r\n          // with only { configurable: false, writeable: false }\r\n          // Additionally, method will only be called with writeable:false\r\n          // if the descriptor has a value, as opposed to getter/setter\r\n          // So we can just check if writable is present and then see if\r\n          // value is present. This eliminates getter and setter descriptors\r\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\r\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\r\n              descriptor.value = originalDescriptor.value;\r\n          }\r\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\r\n          if (configurable === false) {\r\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\r\n          }\r\n          valueMutated(originalTarget, key);\r\n          return true;\r\n      }\r\n  }\r\n\r\n  function wrapReadOnlyValue(membrane, value) {\r\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\r\n  }\r\n  class ReadOnlyHandler {\r\n      constructor(membrane, value) {\r\n          this.originalTarget = value;\r\n          this.membrane = membrane;\r\n      }\r\n      get(shadowTarget, key) {\r\n          const { membrane, originalTarget } = this;\r\n          const value = originalTarget[key];\r\n          const { valueObserved } = membrane;\r\n          valueObserved(originalTarget, key);\r\n          return membrane.getReadOnlyProxy(value);\r\n      }\r\n      set(shadowTarget, key, value) {\r\n          return false;\r\n      }\r\n      deleteProperty(shadowTarget, key) {\r\n          return false;\r\n      }\r\n      apply(shadowTarget, thisArg, argArray) {\r\n          /* No op */\r\n      }\r\n      construct(target, argArray, newTarget) {\r\n          /* No op */\r\n      }\r\n      has(shadowTarget, key) {\r\n          const { originalTarget, membrane: { valueObserved } } = this;\r\n          valueObserved(originalTarget, key);\r\n          return key in originalTarget;\r\n      }\r\n      ownKeys(shadowTarget) {\r\n          const { originalTarget } = this;\r\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\r\n      }\r\n      setPrototypeOf(shadowTarget, prototype) {\r\n      }\r\n      getOwnPropertyDescriptor(shadowTarget, key) {\r\n          const { originalTarget, membrane } = this;\r\n          const { valueObserved } = membrane;\r\n          // keys looked up via hasOwnProperty need to be reactive\r\n          valueObserved(originalTarget, key);\r\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\r\n          if (isUndefined(desc)) {\r\n              return desc;\r\n          }\r\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\r\n          if (!isUndefined(shadowDescriptor)) {\r\n              return shadowDescriptor;\r\n          }\r\n          // Note: by accessing the descriptor, the key is marked as observed\r\n          // but access to the value or getter (if available) cannot be observed,\r\n          // just like regular methods, in which case we just do nothing.\r\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\r\n          if (hasOwnProperty.call(desc, 'set')) {\r\n              desc.set = undefined; // readOnly membrane does not allow setters\r\n          }\r\n          if (!desc.configurable) {\r\n              // If descriptor from original target is not configurable,\r\n              // We must copy the wrapped descriptor over to the shadow target.\r\n              // Otherwise, proxy will throw an invariant error.\r\n              // This is our last chance to lock the value.\r\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\r\n              ObjectDefineProperty(shadowTarget, key, desc);\r\n          }\r\n          return desc;\r\n      }\r\n      preventExtensions(shadowTarget) {\r\n          return false;\r\n      }\r\n      defineProperty(shadowTarget, key, descriptor) {\r\n          return false;\r\n      }\r\n  }\r\n  function createShadowTarget(value) {\r\n      let shadowTarget = undefined;\r\n      if (isArray(value)) {\r\n          shadowTarget = [];\r\n      }\r\n      else if (isObject(value)) {\r\n          shadowTarget = {};\r\n      }\r\n      return shadowTarget;\r\n  }\r\n  const ObjectDotPrototype = Object.prototype;\r\n  function defaultValueIsObservable(value) {\r\n      // intentionally checking for null\r\n      if (value === null) {\r\n          return false;\r\n      }\r\n      // treat all non-object types, including undefined, as non-observable values\r\n      if (typeof value !== 'object') {\r\n          return false;\r\n      }\r\n      if (isArray(value)) {\r\n          return true;\r\n      }\r\n      const proto = getPrototypeOf(value);\r\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\r\n  }\r\n  const defaultValueObserved = (obj, key) => {\r\n      /* do nothing */\r\n  };\r\n  const defaultValueMutated = (obj, key) => {\r\n      /* do nothing */\r\n  };\r\n  const defaultValueDistortion = (value) => value;\r\n  function wrapDescriptor(membrane, descriptor, getValue) {\r\n      const { set, get } = descriptor;\r\n      if (hasOwnProperty.call(descriptor, 'value')) {\r\n          descriptor.value = getValue(membrane, descriptor.value);\r\n      }\r\n      else {\r\n          if (!isUndefined(get)) {\r\n              descriptor.get = function () {\r\n                  // invoking the original getter with the original target\r\n                  return getValue(membrane, get.call(unwrap(this)));\r\n              };\r\n          }\r\n          if (!isUndefined(set)) {\r\n              descriptor.set = function (value) {\r\n                  // At this point we don't have a clear indication of whether\r\n                  // or not a valid mutation will occur, we don't have the key,\r\n                  // and we are not sure why and how they are invoking this setter.\r\n                  // Nevertheless we preserve the original semantics by invoking the\r\n                  // original setter with the original target and the unwrapped value\r\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\r\n              };\r\n          }\r\n      }\r\n      return descriptor;\r\n  }\r\n  class ReactiveMembrane {\r\n      constructor(options) {\r\n          this.valueDistortion = defaultValueDistortion;\r\n          this.valueMutated = defaultValueMutated;\r\n          this.valueObserved = defaultValueObserved;\r\n          this.valueIsObservable = defaultValueIsObservable;\r\n          this.objectGraph = new WeakMap();\r\n          if (!isUndefined(options)) {\r\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\r\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\r\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\r\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\r\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\r\n          }\r\n      }\r\n      getProxy(value) {\r\n          const unwrappedValue = unwrap(value);\r\n          const distorted = this.valueDistortion(unwrappedValue);\r\n          if (this.valueIsObservable(distorted)) {\r\n              const o = this.getReactiveState(unwrappedValue, distorted);\r\n              // when trying to extract the writable version of a readonly\r\n              // we return the readonly.\r\n              return o.readOnly === value ? value : o.reactive;\r\n          }\r\n          return distorted;\r\n      }\r\n      getReadOnlyProxy(value) {\r\n          value = unwrap(value);\r\n          const distorted = this.valueDistortion(value);\r\n          if (this.valueIsObservable(distorted)) {\r\n              return this.getReactiveState(value, distorted).readOnly;\r\n          }\r\n          return distorted;\r\n      }\r\n      unwrapProxy(p) {\r\n          return unwrap(p);\r\n      }\r\n      getReactiveState(value, distortedValue) {\r\n          const { objectGraph, } = this;\r\n          let reactiveState = objectGraph.get(distortedValue);\r\n          if (reactiveState) {\r\n              return reactiveState;\r\n          }\r\n          const membrane = this;\r\n          reactiveState = {\r\n              get reactive() {\r\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\r\n                  // caching the reactive proxy after the first time it is accessed\r\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\r\n                  registerProxy(proxy, value);\r\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\r\n                  return proxy;\r\n              },\r\n              get readOnly() {\r\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\r\n                  // caching the readOnly proxy after the first time it is accessed\r\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\r\n                  registerProxy(proxy, value);\r\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\r\n                  return proxy;\r\n              }\r\n          };\r\n          objectGraph.set(distortedValue, reactiveState);\r\n          return reactiveState;\r\n      }\r\n  }\r\n  /** version: 0.26.0 */\r\n\r\n  function wrap(data, mutationCallback) {\r\n\r\n    let membrane = new ReactiveMembrane({\r\n      valueMutated(target, key) {\r\n        mutationCallback(target, key);\r\n      }\r\n\r\n    });\r\n    return {\r\n      data: membrane.getProxy(data),\r\n      membrane: membrane\r\n    };\r\n  }\r\n  function unwrap$1(membrane, observable) {\r\n    let unwrappedData = membrane.unwrapProxy(observable);\r\n    let copy = {};\r\n    Object.keys(unwrappedData).forEach(key => {\r\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\r\n      copy[key] = unwrappedData[key];\r\n    });\r\n    return copy;\r\n  }\r\n\r\n  class Component {\r\n    constructor(el, componentForClone = null) {\r\n      this.$el = el;\r\n      const dataAttr = this.$el.getAttribute('x-data');\r\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\r\n      const initExpression = this.$el.getAttribute('x-init');\r\n      let dataExtras = {\r\n        $el: this.$el\r\n      };\r\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\r\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\r\n        Object.defineProperty(dataExtras, `$${name}`, {\r\n          get: function get() {\r\n            return callback(canonicalComponentElementReference);\r\n          }\r\n        });\r\n      });\r\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(dataExpression, dataExtras);\r\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\r\n\r\n      let {\r\n        membrane,\r\n        data\r\n      } = this.wrapDataInObservable(this.unobservedData);\r\n      this.$data = data;\r\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\r\n      // our magic properties to the original data for access.\r\n\r\n      this.unobservedData.$el = this.$el;\r\n      this.unobservedData.$refs = this.getRefsProxy();\r\n      this.nextTickStack = [];\r\n\r\n      this.unobservedData.$nextTick = callback => {\r\n        this.nextTickStack.push(callback);\r\n      };\r\n\r\n      this.watchers = {};\r\n\r\n      this.unobservedData.$watch = (property, callback) => {\r\n        if (!this.watchers[property]) this.watchers[property] = [];\r\n        this.watchers[property].push(callback);\r\n      };\r\n      /* MODERN-ONLY:START */\r\n      // We remove this piece of code from the legacy build.\r\n      // In IE11, we have already defined our helpers at this point.\r\n      // Register custom magic properties.\r\n\r\n\r\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\r\n        Object.defineProperty(this.unobservedData, `$${name}`, {\r\n          get: function get() {\r\n            return callback(canonicalComponentElementReference);\r\n          }\r\n        });\r\n      });\r\n      /* MODERN-ONLY:END */\r\n\r\n      this.showDirectiveStack = [];\r\n      this.showDirectiveLastElement;\r\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\r\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\r\n\r\n      if (initExpression && !componentForClone) {\r\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\r\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\r\n        this.pauseReactivity = true;\r\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\r\n        this.pauseReactivity = false;\r\n      } // Register all our listeners and set all our attribute bindings.\r\n\r\n\r\n      this.initializeElements(this.$el); // Use mutation observer to detect new elements being added within this component at run-time.\r\n      // Alpine's just so darn flexible amirite?\r\n\r\n      this.listenForNewElementsToInitialize();\r\n\r\n      if (typeof initReturnedCallback === 'function') {\r\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\r\n        // Alpine's got it's grubby little paws all over everything.\r\n        initReturnedCallback.call(this.$data);\r\n      }\r\n\r\n      componentForClone || setTimeout(() => {\r\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\r\n      }, 0);\r\n    }\r\n\r\n    getUnobservedData() {\r\n      return unwrap$1(this.membrane, this.$data);\r\n    }\r\n\r\n    wrapDataInObservable(data) {\r\n      var self = this;\r\n      let updateDom = debounce(function () {\r\n        self.updateElements(self.$el);\r\n      }, 0);\r\n      return wrap(data, (target, key) => {\r\n        if (self.watchers[key]) {\r\n          // If there's a watcher for this specific key, run it.\r\n          self.watchers[key].forEach(callback => callback(target[key]));\r\n        } else if (Array.isArray(target)) {\r\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\r\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\r\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\r\n            // For example, when calling push, we would get a mutation for the item's key\r\n            // and a second mutation for the length property.\r\n\r\n            if (key === 'length') return;\r\n            dotNotationParts.reduce((comparisonData, part) => {\r\n              if (Object.is(target, comparisonData[part])) {\r\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\r\n              }\r\n\r\n              return comparisonData[part];\r\n            }, self.unobservedData);\r\n          });\r\n        } else {\r\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\r\n          // if this mutation fits any of them.\r\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\r\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\r\n            // key, then skip it early for performance reasons.\r\n\r\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\r\n            // a match, and call the watcher if one's found.\r\n\r\n            dotNotationParts.reduce((comparisonData, part) => {\r\n              if (Object.is(target, comparisonData)) {\r\n                // Run the watchers.\r\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\r\n              }\r\n\r\n              return comparisonData[part];\r\n            }, self.unobservedData);\r\n          });\r\n        } // Don't react to data changes for cases like the `x-created` hook.\r\n\r\n\r\n        if (self.pauseReactivity) return;\r\n        updateDom();\r\n      });\r\n    }\r\n\r\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\r\n      walk(el, el => {\r\n        // We've hit a component.\r\n        if (el.hasAttribute('x-data')) {\r\n          // If it's not the current one.\r\n          if (!el.isSameNode(this.$el)) {\r\n            // Initialize it if it's not.\r\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\r\n\r\n            return false;\r\n          }\r\n        }\r\n\r\n        return callback(el);\r\n      });\r\n    }\r\n\r\n    initializeElements(rootEl, extraVars = () => {}) {\r\n      this.walkAndSkipNestedComponents(rootEl, el => {\r\n        // Don't touch spawns from for loop\r\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\r\n\r\n        if (el.__x_inserted_me !== undefined) return false;\r\n        this.initializeElement(el, extraVars);\r\n      }, el => {\r\n        el.__x = new Component(el);\r\n      });\r\n      this.executeAndClearRemainingShowDirectiveStack();\r\n      this.executeAndClearNextTickStack(rootEl);\r\n    }\r\n\r\n    initializeElement(el, extraVars) {\r\n      // To support class attribute merging, we have to know what the element's\r\n      // original class attribute looked like for reference.\r\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\r\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\r\n      }\r\n\r\n      this.registerListeners(el, extraVars);\r\n      this.resolveBoundAttributes(el, true, extraVars);\r\n    }\r\n\r\n    updateElements(rootEl, extraVars = () => {}) {\r\n      this.walkAndSkipNestedComponents(rootEl, el => {\r\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\r\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\r\n        this.updateElement(el, extraVars);\r\n      }, el => {\r\n        el.__x = new Component(el);\r\n      });\r\n      this.executeAndClearRemainingShowDirectiveStack();\r\n      this.executeAndClearNextTickStack(rootEl);\r\n    }\r\n\r\n    executeAndClearNextTickStack(el) {\r\n      // Skip spawns from alpine directives\r\n      if (el === this.$el && this.nextTickStack.length > 0) {\r\n        // We run the tick stack after the next frame to allow any\r\n        // running transitions to pass the initial show stage.\r\n        requestAnimationFrame(() => {\r\n          while (this.nextTickStack.length > 0) {\r\n            this.nextTickStack.shift()();\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    executeAndClearRemainingShowDirectiveStack() {\r\n      // The goal here is to start all the x-show transitions\r\n      // and build a nested promise chain so that elements\r\n      // only hide when the children are finished hiding.\r\n      this.showDirectiveStack.reverse().map(handler => {\r\n        return new Promise((resolve, reject) => {\r\n          handler(resolve, reject);\r\n        });\r\n      }).reduce((promiseChain, promise) => {\r\n        return promiseChain.then(() => {\r\n          return promise.then(finishElement => {\r\n            finishElement();\r\n          });\r\n        });\r\n      }, Promise.resolve(() => {})).catch(e => {\r\n        if (e !== TRANSITION_CANCELLED) throw e;\r\n      }); // We've processed the handler stack. let's clear it.\r\n\r\n      this.showDirectiveStack = [];\r\n      this.showDirectiveLastElement = undefined;\r\n    }\r\n\r\n    updateElement(el, extraVars) {\r\n      this.resolveBoundAttributes(el, false, extraVars);\r\n    }\r\n\r\n    registerListeners(el, extraVars) {\r\n      getXAttrs(el, this).forEach(({\r\n        type,\r\n        value,\r\n        modifiers,\r\n        expression\r\n      }) => {\r\n        switch (type) {\r\n          case 'on':\r\n            registerListener(this, el, value, modifiers, expression, extraVars);\r\n            break;\r\n\r\n          case 'model':\r\n            registerModelListener(this, el, modifiers, expression, extraVars);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\r\n      let attrs = getXAttrs(el, this);\r\n      attrs.forEach(({\r\n        type,\r\n        value,\r\n        modifiers,\r\n        expression\r\n      }) => {\r\n        switch (type) {\r\n          case 'model':\r\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\r\n            break;\r\n\r\n          case 'bind':\r\n            // The :key binding on an x-for is special, ignore it.\r\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\r\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\r\n            break;\r\n\r\n          case 'text':\r\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\r\n            handleTextDirective(el, output, expression);\r\n            break;\r\n\r\n          case 'html':\r\n            handleHtmlDirective(this, el, expression, extraVars);\r\n            break;\r\n\r\n          case 'show':\r\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\r\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\r\n            break;\r\n\r\n          case 'if':\r\n            // If this element also has x-for on it, don't process x-if.\r\n            // We will let the \"x-for\" directive handle the \"if\"ing.\r\n            if (attrs.some(i => i.type === 'for')) return;\r\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\r\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\r\n            break;\r\n\r\n          case 'for':\r\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\r\n            break;\r\n\r\n          case 'cloak':\r\n            el.removeAttribute('x-cloak');\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\r\n      return saferEval(expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\r\n        $dispatch: this.getDispatchFunction(el)\r\n      }));\r\n    }\r\n\r\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\r\n      return saferEvalNoReturn(expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\r\n        $dispatch: this.getDispatchFunction(el)\r\n      }));\r\n    }\r\n\r\n    getDispatchFunction(el) {\r\n      return (event, detail = {}) => {\r\n        el.dispatchEvent(new CustomEvent(event, {\r\n          detail,\r\n          bubbles: true\r\n        }));\r\n      };\r\n    }\r\n\r\n    listenForNewElementsToInitialize() {\r\n      const targetNode = this.$el;\r\n      const observerOptions = {\r\n        childList: true,\r\n        attributes: true,\r\n        subtree: true\r\n      };\r\n      const observer = new MutationObserver(mutations => {\r\n        for (let i = 0; i < mutations.length; i++) {\r\n          // Filter out mutations triggered from child components.\r\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\r\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\r\n\r\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\r\n            const rawData = saferEval(mutations[i].target.getAttribute('x-data') || '{}', {\r\n              $el: this.$el\r\n            });\r\n            Object.keys(rawData).forEach(key => {\r\n              if (this.$data[key] !== rawData[key]) {\r\n                this.$data[key] = rawData[key];\r\n              }\r\n            });\r\n          }\r\n\r\n          if (mutations[i].addedNodes.length > 0) {\r\n            mutations[i].addedNodes.forEach(node => {\r\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\r\n\r\n              if (node.matches('[x-data]') && !node.__x) {\r\n                node.__x = new Component(node);\r\n                return;\r\n              }\r\n\r\n              this.initializeElements(node);\r\n            });\r\n          }\r\n        }\r\n      });\r\n      observer.observe(targetNode, observerOptions);\r\n    }\r\n\r\n    getRefsProxy() {\r\n      var self = this;\r\n      var refObj = {};\r\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\r\n      // the DOM when the system needs something from it. This way, the framework is flexible and\r\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\r\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\r\n\r\n      return new Proxy(refObj, {\r\n        get(object, property) {\r\n          if (property === '$isAlpineProxy') return true;\r\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\r\n          // nested components.\r\n\r\n          self.walkAndSkipNestedComponents(self.$el, el => {\r\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\r\n              ref = el;\r\n            }\r\n          });\r\n          return ref;\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  const Alpine = {\r\n    version: \"2.7.3\",\r\n    pauseMutationObserver: false,\r\n    magicProperties: {},\r\n    onComponentInitializeds: [],\r\n    onBeforeComponentInitializeds: [],\r\n    ignoreFocusedForValueBinding: false,\r\n    start: async function start() {\r\n      if (!isTesting()) {\r\n        await domReady();\r\n      }\r\n\r\n      this.discoverComponents(el => {\r\n        this.initializeComponent(el);\r\n      }); // It's easier and more performant to just support Turbolinks than listen\r\n      // to MutationObserver mutations at the document level.\r\n\r\n      document.addEventListener(\"turbolinks:load\", () => {\r\n        this.discoverUninitializedComponents(el => {\r\n          this.initializeComponent(el);\r\n        });\r\n      });\r\n      this.listenForNewUninitializedComponentsAtRunTime();\r\n    },\r\n    discoverComponents: function discoverComponents(callback) {\r\n      const rootEls = document.querySelectorAll('[x-data]');\r\n      rootEls.forEach(rootEl => {\r\n        callback(rootEl);\r\n      });\r\n    },\r\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\r\n      const rootEls = (el || document).querySelectorAll('[x-data]');\r\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\r\n        callback(rootEl);\r\n      });\r\n    },\r\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {\r\n      const targetNode = document.querySelector('body');\r\n      const observerOptions = {\r\n        childList: true,\r\n        attributes: true,\r\n        subtree: true\r\n      };\r\n      const observer = new MutationObserver(mutations => {\r\n        if (this.pauseMutationObserver) return;\r\n\r\n        for (let i = 0; i < mutations.length; i++) {\r\n          if (mutations[i].addedNodes.length > 0) {\r\n            mutations[i].addedNodes.forEach(node => {\r\n              // Discard non-element nodes (like line-breaks)\r\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\r\n              // They will take care of themselves.\r\n\r\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\r\n              this.discoverUninitializedComponents(el => {\r\n                this.initializeComponent(el);\r\n              }, node.parentElement);\r\n            });\r\n          }\r\n        }\r\n      });\r\n      observer.observe(targetNode, observerOptions);\r\n    },\r\n    initializeComponent: function initializeComponent(el) {\r\n      if (!el.__x) {\r\n        // Wrap in a try/catch so that we don't prevent other components\r\n        // from initializing when one component contains an error.\r\n        try {\r\n          el.__x = new Component(el);\r\n        } catch (error) {\r\n          setTimeout(() => {\r\n            throw error;\r\n          }, 0);\r\n        }\r\n      }\r\n    },\r\n    clone: function clone(component, newEl) {\r\n      if (!newEl.__x) {\r\n        newEl.__x = new Component(newEl, component);\r\n      }\r\n    },\r\n    addMagicProperty: function addMagicProperty(name, callback) {\r\n      this.magicProperties[name] = callback;\r\n    },\r\n    onComponentInitialized: function onComponentInitialized(callback) {\r\n      this.onComponentInitializeds.push(callback);\r\n    },\r\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\r\n      this.onBeforeComponentInitializeds.push(callback);\r\n    }\r\n  };\r\n\r\n  if (!isTesting()) {\r\n    window.Alpine = Alpine;\r\n\r\n    if (window.deferLoadingAlpine) {\r\n      window.deferLoadingAlpine(function () {\r\n        window.Alpine.start();\r\n      });\r\n    } else {\r\n      window.Alpine.start();\r\n    }\r\n  }\r\n\r\n  return Alpine;\r\n\r\n})));\r\n"],"sourceRoot":""}